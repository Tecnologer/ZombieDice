syntax = "proto3";

option go_package = "server/models/gproto";

package gproto;

service Game {
  rpc NewGame(NewGameRequest) returns (Response) {}
  rpc Join(JoinRequest) returns (Response) {}
  rpc Notifications(RegisterNotifications) returns (stream Response);
  rpc Movement(MovementRequest) returns (Response) {}
}

message EmptyRequest {}

message NewGameRequest {
  string password = 1;
  int32 limitPlayers = 2;
  Player player = 3;
}

message NewGameResponse { string code = 1; }

message Player {
  string id = 1;
  string Name = 2;
}

message JoinRequest {
  string code = 1;
  string password = 2;
  Player player = 3;
}

message PlayerUpdate {
  Player player = 1;
  bool status = 2;
}

message GameOver {
  Player winner = 1;
  int32 turns = 2;
  int32 brains = 3;
}
message TurnOver {
  int32 shotguns = 1;
  int32 brains = 2;
  Player nextPlayer = 3;
}

message RollDice {
  Dice dice = 1;
  DiceSide side = 2;
}

message NotificationResponse {
  enum NotificationType {
    JOIN = 0;
    LEFT = 1;
    OVER = 2;
    TURN = 3;
    PICK = 4;
    ROLL = 5;
  }

  NotificationType type = 1;
  oneof Content {
    PlayerUpdate PlayerJoin = 2;
    PlayerUpdate PlayerLeft = 3;
    PlayerUpdate PlayerTurn = 4;
    GameOver GameOver = 5;
    Dice DicePick = 6;
    TurnOver TurnOver = 7;
    RollDice RollDice = 8;
  }
}

message RegisterNotifications {
  string code = 1;
  Player player = 2;
}

message Response {
  oneof Content {
    NewGameResponse NewGameResponse = 1;
    PlayerUpdate JoinResponse = 2;
    NotificationResponse Notification = 3;
    MovementResponse Movement = 4;
  }
}

enum MovementType {
  PICK = 0;
  ROLL = 1;
  OVER = 2;
}

enum DiceSide {
  BRAIN = 0;
  SHOTGUN = 1;
  FOOTPRINTS = 2;
}

message Dice {
  enum DiceLevel {
    EASY = 0;
    MEDIUM = 1;
    HARD = 2;
  }
  DiceLevel Level = 1;
  repeated DiceSide Sides = 2;
}

message MovementResponse {
  MovementType type = 1;
  oneof Movement {
    Dice dice = 2;
    RollDice rollDice = 3;
  }
}

message MovementRequest {
  MovementType type = 1;
  string code = 2;
  Dice dice = 3;
  Player ownPlayer = 4;
}