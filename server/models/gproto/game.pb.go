// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.7
// source: server/game.proto

package gproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MovementType int32

const (
	MovementType_PICK MovementType = 0
	MovementType_ROLL MovementType = 1
	MovementType_OVER MovementType = 2
)

// Enum value maps for MovementType.
var (
	MovementType_name = map[int32]string{
		0: "PICK",
		1: "ROLL",
		2: "OVER",
	}
	MovementType_value = map[string]int32{
		"PICK": 0,
		"ROLL": 1,
		"OVER": 2,
	}
)

func (x MovementType) Enum() *MovementType {
	p := new(MovementType)
	*p = x
	return p
}

func (x MovementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_game_proto_enumTypes[0].Descriptor()
}

func (MovementType) Type() protoreflect.EnumType {
	return &file_server_game_proto_enumTypes[0]
}

func (x MovementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementType.Descriptor instead.
func (MovementType) EnumDescriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{0}
}

type DiceSide int32

const (
	DiceSide_BRAIN      DiceSide = 0
	DiceSide_SHOTGUN    DiceSide = 1
	DiceSide_FOOTPRINTS DiceSide = 2
)

// Enum value maps for DiceSide.
var (
	DiceSide_name = map[int32]string{
		0: "BRAIN",
		1: "SHOTGUN",
		2: "FOOTPRINTS",
	}
	DiceSide_value = map[string]int32{
		"BRAIN":      0,
		"SHOTGUN":    1,
		"FOOTPRINTS": 2,
	}
)

func (x DiceSide) Enum() *DiceSide {
	p := new(DiceSide)
	*p = x
	return p
}

func (x DiceSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiceSide) Descriptor() protoreflect.EnumDescriptor {
	return file_server_game_proto_enumTypes[1].Descriptor()
}

func (DiceSide) Type() protoreflect.EnumType {
	return &file_server_game_proto_enumTypes[1]
}

func (x DiceSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiceSide.Descriptor instead.
func (DiceSide) EnumDescriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{1}
}

type NotificationResponse_NotificationType int32

const (
	NotificationResponse_JOIN NotificationResponse_NotificationType = 0
	NotificationResponse_LEFT NotificationResponse_NotificationType = 1
	NotificationResponse_OVER NotificationResponse_NotificationType = 2
	NotificationResponse_TURN NotificationResponse_NotificationType = 3
	NotificationResponse_PICK NotificationResponse_NotificationType = 4
	NotificationResponse_ROLL NotificationResponse_NotificationType = 5
)

// Enum value maps for NotificationResponse_NotificationType.
var (
	NotificationResponse_NotificationType_name = map[int32]string{
		0: "JOIN",
		1: "LEFT",
		2: "OVER",
		3: "TURN",
		4: "PICK",
		5: "ROLL",
	}
	NotificationResponse_NotificationType_value = map[string]int32{
		"JOIN": 0,
		"LEFT": 1,
		"OVER": 2,
		"TURN": 3,
		"PICK": 4,
		"ROLL": 5,
	}
)

func (x NotificationResponse_NotificationType) Enum() *NotificationResponse_NotificationType {
	p := new(NotificationResponse_NotificationType)
	*p = x
	return p
}

func (x NotificationResponse_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationResponse_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_game_proto_enumTypes[2].Descriptor()
}

func (NotificationResponse_NotificationType) Type() protoreflect.EnumType {
	return &file_server_game_proto_enumTypes[2]
}

func (x NotificationResponse_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationResponse_NotificationType.Descriptor instead.
func (NotificationResponse_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{9, 0}
}

type Dice_DiceLevel int32

const (
	Dice_EASY   Dice_DiceLevel = 0
	Dice_MEDIUM Dice_DiceLevel = 1
	Dice_HARD   Dice_DiceLevel = 2
)

// Enum value maps for Dice_DiceLevel.
var (
	Dice_DiceLevel_name = map[int32]string{
		0: "EASY",
		1: "MEDIUM",
		2: "HARD",
	}
	Dice_DiceLevel_value = map[string]int32{
		"EASY":   0,
		"MEDIUM": 1,
		"HARD":   2,
	}
)

func (x Dice_DiceLevel) Enum() *Dice_DiceLevel {
	p := new(Dice_DiceLevel)
	*p = x
	return p
}

func (x Dice_DiceLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dice_DiceLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_server_game_proto_enumTypes[3].Descriptor()
}

func (Dice_DiceLevel) Type() protoreflect.EnumType {
	return &file_server_game_proto_enumTypes[3]
}

func (x Dice_DiceLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dice_DiceLevel.Descriptor instead.
func (Dice_DiceLevel) EnumDescriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{12, 0}
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{0}
}

type NewGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password     string  `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	LimitPlayers int32   `protobuf:"varint,2,opt,name=limitPlayers,proto3" json:"limitPlayers,omitempty"`
	Player       *Player `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *NewGameRequest) Reset() {
	*x = NewGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGameRequest) ProtoMessage() {}

func (x *NewGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGameRequest.ProtoReflect.Descriptor instead.
func (*NewGameRequest) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{1}
}

func (x *NewGameRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *NewGameRequest) GetLimitPlayers() int32 {
	if x != nil {
		return x.LimitPlayers
	}
	return 0
}

func (x *NewGameRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type NewGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *NewGameResponse) Reset() {
	*x = NewGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGameResponse) ProtoMessage() {}

func (x *NewGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGameResponse.ProtoReflect.Descriptor instead.
func (*NewGameResponse) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{2}
}

func (x *NewGameResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{3}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Password string  `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Player   *Player `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{4}
}

func (x *JoinRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *JoinRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *JoinRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type PlayerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Status bool    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PlayerUpdate) Reset() {
	*x = PlayerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerUpdate) ProtoMessage() {}

func (x *PlayerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerUpdate.ProtoReflect.Descriptor instead.
func (*PlayerUpdate) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerUpdate) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *PlayerUpdate) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GameOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Winner *Player `protobuf:"bytes,1,opt,name=winner,proto3" json:"winner,omitempty"`
	Turns  int32   `protobuf:"varint,2,opt,name=turns,proto3" json:"turns,omitempty"`
	Brains int32   `protobuf:"varint,3,opt,name=brains,proto3" json:"brains,omitempty"`
}

func (x *GameOver) Reset() {
	*x = GameOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOver) ProtoMessage() {}

func (x *GameOver) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOver.ProtoReflect.Descriptor instead.
func (*GameOver) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{6}
}

func (x *GameOver) GetWinner() *Player {
	if x != nil {
		return x.Winner
	}
	return nil
}

func (x *GameOver) GetTurns() int32 {
	if x != nil {
		return x.Turns
	}
	return 0
}

func (x *GameOver) GetBrains() int32 {
	if x != nil {
		return x.Brains
	}
	return 0
}

type TurnOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shotguns int32 `protobuf:"varint,1,opt,name=shotguns,proto3" json:"shotguns,omitempty"`
	Brains   int32 `protobuf:"varint,2,opt,name=brains,proto3" json:"brains,omitempty"`
}

func (x *TurnOver) Reset() {
	*x = TurnOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TurnOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnOver) ProtoMessage() {}

func (x *TurnOver) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnOver.ProtoReflect.Descriptor instead.
func (*TurnOver) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{7}
}

func (x *TurnOver) GetShotguns() int32 {
	if x != nil {
		return x.Shotguns
	}
	return 0
}

func (x *TurnOver) GetBrains() int32 {
	if x != nil {
		return x.Brains
	}
	return 0
}

type RollDice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dice *Dice    `protobuf:"bytes,1,opt,name=dice,proto3" json:"dice,omitempty"`
	Side DiceSide `protobuf:"varint,2,opt,name=side,proto3,enum=gproto.DiceSide" json:"side,omitempty"`
}

func (x *RollDice) Reset() {
	*x = RollDice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollDice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollDice) ProtoMessage() {}

func (x *RollDice) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollDice.ProtoReflect.Descriptor instead.
func (*RollDice) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{8}
}

func (x *RollDice) GetDice() *Dice {
	if x != nil {
		return x.Dice
	}
	return nil
}

func (x *RollDice) GetSide() DiceSide {
	if x != nil {
		return x.Side
	}
	return DiceSide_BRAIN
}

type NotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type NotificationResponse_NotificationType `protobuf:"varint,1,opt,name=type,proto3,enum=gproto.NotificationResponse_NotificationType" json:"type,omitempty"`
	// Types that are assignable to Content:
	//	*NotificationResponse_PlayerJoin
	//	*NotificationResponse_PlayerLeft
	//	*NotificationResponse_PlayerTurn
	//	*NotificationResponse_GameOver
	//	*NotificationResponse_DicePick
	//	*NotificationResponse_TurnOver
	//	*NotificationResponse_RollDice
	Content isNotificationResponse_Content `protobuf_oneof:"Content"`
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{9}
}

func (x *NotificationResponse) GetType() NotificationResponse_NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationResponse_JOIN
}

func (m *NotificationResponse) GetContent() isNotificationResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *NotificationResponse) GetPlayerJoin() *PlayerUpdate {
	if x, ok := x.GetContent().(*NotificationResponse_PlayerJoin); ok {
		return x.PlayerJoin
	}
	return nil
}

func (x *NotificationResponse) GetPlayerLeft() *PlayerUpdate {
	if x, ok := x.GetContent().(*NotificationResponse_PlayerLeft); ok {
		return x.PlayerLeft
	}
	return nil
}

func (x *NotificationResponse) GetPlayerTurn() *PlayerUpdate {
	if x, ok := x.GetContent().(*NotificationResponse_PlayerTurn); ok {
		return x.PlayerTurn
	}
	return nil
}

func (x *NotificationResponse) GetGameOver() *GameOver {
	if x, ok := x.GetContent().(*NotificationResponse_GameOver); ok {
		return x.GameOver
	}
	return nil
}

func (x *NotificationResponse) GetDicePick() *Dice {
	if x, ok := x.GetContent().(*NotificationResponse_DicePick); ok {
		return x.DicePick
	}
	return nil
}

func (x *NotificationResponse) GetTurnOver() *TurnOver {
	if x, ok := x.GetContent().(*NotificationResponse_TurnOver); ok {
		return x.TurnOver
	}
	return nil
}

func (x *NotificationResponse) GetRollDice() *RollDice {
	if x, ok := x.GetContent().(*NotificationResponse_RollDice); ok {
		return x.RollDice
	}
	return nil
}

type isNotificationResponse_Content interface {
	isNotificationResponse_Content()
}

type NotificationResponse_PlayerJoin struct {
	PlayerJoin *PlayerUpdate `protobuf:"bytes,2,opt,name=PlayerJoin,proto3,oneof"`
}

type NotificationResponse_PlayerLeft struct {
	PlayerLeft *PlayerUpdate `protobuf:"bytes,3,opt,name=PlayerLeft,proto3,oneof"`
}

type NotificationResponse_PlayerTurn struct {
	PlayerTurn *PlayerUpdate `protobuf:"bytes,4,opt,name=PlayerTurn,proto3,oneof"`
}

type NotificationResponse_GameOver struct {
	GameOver *GameOver `protobuf:"bytes,5,opt,name=GameOver,proto3,oneof"`
}

type NotificationResponse_DicePick struct {
	DicePick *Dice `protobuf:"bytes,6,opt,name=DicePick,proto3,oneof"`
}

type NotificationResponse_TurnOver struct {
	TurnOver *TurnOver `protobuf:"bytes,7,opt,name=TurnOver,proto3,oneof"`
}

type NotificationResponse_RollDice struct {
	RollDice *RollDice `protobuf:"bytes,8,opt,name=RollDice,proto3,oneof"`
}

func (*NotificationResponse_PlayerJoin) isNotificationResponse_Content() {}

func (*NotificationResponse_PlayerLeft) isNotificationResponse_Content() {}

func (*NotificationResponse_PlayerTurn) isNotificationResponse_Content() {}

func (*NotificationResponse_GameOver) isNotificationResponse_Content() {}

func (*NotificationResponse_DicePick) isNotificationResponse_Content() {}

func (*NotificationResponse_TurnOver) isNotificationResponse_Content() {}

func (*NotificationResponse_RollDice) isNotificationResponse_Content() {}

type RegisterNotifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *RegisterNotifications) Reset() {
	*x = RegisterNotifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNotifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNotifications) ProtoMessage() {}

func (x *RegisterNotifications) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNotifications.ProtoReflect.Descriptor instead.
func (*RegisterNotifications) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterNotifications) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*Response_NewGameResponse
	//	*Response_JoinResponse
	//	*Response_Notification
	//	*Response_Movement
	Content isResponse_Content `protobuf_oneof:"Content"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{11}
}

func (m *Response) GetContent() isResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Response) GetNewGameResponse() *NewGameResponse {
	if x, ok := x.GetContent().(*Response_NewGameResponse); ok {
		return x.NewGameResponse
	}
	return nil
}

func (x *Response) GetJoinResponse() *PlayerUpdate {
	if x, ok := x.GetContent().(*Response_JoinResponse); ok {
		return x.JoinResponse
	}
	return nil
}

func (x *Response) GetNotification() *NotificationResponse {
	if x, ok := x.GetContent().(*Response_Notification); ok {
		return x.Notification
	}
	return nil
}

func (x *Response) GetMovement() *MovementResponse {
	if x, ok := x.GetContent().(*Response_Movement); ok {
		return x.Movement
	}
	return nil
}

type isResponse_Content interface {
	isResponse_Content()
}

type Response_NewGameResponse struct {
	NewGameResponse *NewGameResponse `protobuf:"bytes,1,opt,name=NewGameResponse,proto3,oneof"`
}

type Response_JoinResponse struct {
	JoinResponse *PlayerUpdate `protobuf:"bytes,2,opt,name=JoinResponse,proto3,oneof"`
}

type Response_Notification struct {
	Notification *NotificationResponse `protobuf:"bytes,3,opt,name=Notification,proto3,oneof"`
}

type Response_Movement struct {
	Movement *MovementResponse `protobuf:"bytes,4,opt,name=Movement,proto3,oneof"`
}

func (*Response_NewGameResponse) isResponse_Content() {}

func (*Response_JoinResponse) isResponse_Content() {}

func (*Response_Notification) isResponse_Content() {}

func (*Response_Movement) isResponse_Content() {}

type Dice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level Dice_DiceLevel `protobuf:"varint,1,opt,name=Level,proto3,enum=gproto.Dice_DiceLevel" json:"Level,omitempty"`
	Sides []DiceSide     `protobuf:"varint,2,rep,packed,name=Sides,proto3,enum=gproto.DiceSide" json:"Sides,omitempty"`
}

func (x *Dice) Reset() {
	*x = Dice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dice) ProtoMessage() {}

func (x *Dice) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dice.ProtoReflect.Descriptor instead.
func (*Dice) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{12}
}

func (x *Dice) GetLevel() Dice_DiceLevel {
	if x != nil {
		return x.Level
	}
	return Dice_EASY
}

func (x *Dice) GetSides() []DiceSide {
	if x != nil {
		return x.Sides
	}
	return nil
}

type MovementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MovementType `protobuf:"varint,1,opt,name=type,proto3,enum=gproto.MovementType" json:"type,omitempty"`
	// Types that are assignable to Movement:
	//	*MovementResponse_Dice
	//	*MovementResponse_RollDice
	Movement isMovementResponse_Movement `protobuf_oneof:"Movement"`
}

func (x *MovementResponse) Reset() {
	*x = MovementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementResponse) ProtoMessage() {}

func (x *MovementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementResponse.ProtoReflect.Descriptor instead.
func (*MovementResponse) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{13}
}

func (x *MovementResponse) GetType() MovementType {
	if x != nil {
		return x.Type
	}
	return MovementType_PICK
}

func (m *MovementResponse) GetMovement() isMovementResponse_Movement {
	if m != nil {
		return m.Movement
	}
	return nil
}

func (x *MovementResponse) GetDice() *Dice {
	if x, ok := x.GetMovement().(*MovementResponse_Dice); ok {
		return x.Dice
	}
	return nil
}

func (x *MovementResponse) GetRollDice() *RollDice {
	if x, ok := x.GetMovement().(*MovementResponse_RollDice); ok {
		return x.RollDice
	}
	return nil
}

type isMovementResponse_Movement interface {
	isMovementResponse_Movement()
}

type MovementResponse_Dice struct {
	Dice *Dice `protobuf:"bytes,2,opt,name=dice,proto3,oneof"`
}

type MovementResponse_RollDice struct {
	RollDice *RollDice `protobuf:"bytes,3,opt,name=rollDice,proto3,oneof"`
}

func (*MovementResponse_Dice) isMovementResponse_Movement() {}

func (*MovementResponse_RollDice) isMovementResponse_Movement() {}

type MovementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MovementType `protobuf:"varint,1,opt,name=type,proto3,enum=gproto.MovementType" json:"type,omitempty"`
	Code string       `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Dice *Dice        `protobuf:"bytes,3,opt,name=dice,proto3" json:"dice,omitempty"`
}

func (x *MovementRequest) Reset() {
	*x = MovementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_game_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementRequest) ProtoMessage() {}

func (x *MovementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_game_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementRequest.ProtoReflect.Descriptor instead.
func (*MovementRequest) Descriptor() ([]byte, []int) {
	return file_server_game_proto_rawDescGZIP(), []int{14}
}

func (x *MovementRequest) GetType() MovementType {
	if x != nil {
		return x.Type
	}
	return MovementType_PICK
}

func (x *MovementRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MovementRequest) GetDice() *Dice {
	if x != nil {
		return x.Dice
	}
	return nil
}

var File_server_game_proto protoreflect.FileDescriptor

var file_server_game_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x0e, 0x4e,
	0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x06,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x22, 0x4e, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x60, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x77,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x72, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x72, 0x61,
	0x69, 0x6e, 0x73, 0x22, 0x3e, 0x0a, 0x08, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x74, 0x67, 0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x74, 0x67, 0x75, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x72, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x72, 0x61,
	0x69, 0x6e, 0x73, 0x22, 0x52, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x44, 0x69, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x53, 0x69, 0x64,
	0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x22, 0x98, 0x04, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x65, 0x66, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x75, 0x72,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x44,
	0x69, 0x63, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x44,
	0x69, 0x63, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x08, 0x54, 0x75, 0x72, 0x6e, 0x4f,
	0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x54,
	0x75, 0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x44,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x44, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x52,
	0x6f, 0x6c, 0x6c, 0x44, 0x69, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4a,
	0x4f, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x55, 0x52,
	0x4e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x49, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x08, 0x0a,
	0x04, 0x52, 0x4f, 0x4c, 0x4c, 0x10, 0x05, 0x42, 0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x92, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f,
	0x4e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x4e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x04, 0x44, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x53,
	0x69, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x53, 0x69, 0x64, 0x65, 0x52, 0x05, 0x53, 0x69,
	0x64, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x09, 0x44, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x08, 0x0a, 0x04, 0x45, 0x41, 0x53, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45,
	0x44, 0x49, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x41, 0x52, 0x44, 0x10, 0x02,
	0x22, 0x9c, 0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x44, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6c, 0x6c, 0x44, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x44,
	0x69, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x71, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x69,
	0x63, 0x65, 0x2a, 0x2c, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x49, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x52, 0x4f, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x02,
	0x2a, 0x32, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x65, 0x53, 0x69, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x42, 0x52, 0x41, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x4f, 0x54, 0x47,
	0x55, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4f, 0x4f, 0x54, 0x50, 0x52, 0x49, 0x4e,
	0x54, 0x53, 0x10, 0x02, 0x32, 0xeb, 0x01, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x07, 0x4e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x67,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x10, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x08, 0x4d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_server_game_proto_rawDescOnce sync.Once
	file_server_game_proto_rawDescData = file_server_game_proto_rawDesc
)

func file_server_game_proto_rawDescGZIP() []byte {
	file_server_game_proto_rawDescOnce.Do(func() {
		file_server_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_game_proto_rawDescData)
	})
	return file_server_game_proto_rawDescData
}

var file_server_game_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_server_game_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_server_game_proto_goTypes = []interface{}{
	(MovementType)(0), // 0: gproto.MovementType
	(DiceSide)(0),     // 1: gproto.DiceSide
	(NotificationResponse_NotificationType)(0), // 2: gproto.NotificationResponse.NotificationType
	(Dice_DiceLevel)(0),                        // 3: gproto.Dice.DiceLevel
	(*EmptyRequest)(nil),                       // 4: gproto.EmptyRequest
	(*NewGameRequest)(nil),                     // 5: gproto.NewGameRequest
	(*NewGameResponse)(nil),                    // 6: gproto.NewGameResponse
	(*Player)(nil),                             // 7: gproto.Player
	(*JoinRequest)(nil),                        // 8: gproto.JoinRequest
	(*PlayerUpdate)(nil),                       // 9: gproto.PlayerUpdate
	(*GameOver)(nil),                           // 10: gproto.GameOver
	(*TurnOver)(nil),                           // 11: gproto.TurnOver
	(*RollDice)(nil),                           // 12: gproto.RollDice
	(*NotificationResponse)(nil),               // 13: gproto.NotificationResponse
	(*RegisterNotifications)(nil),              // 14: gproto.RegisterNotifications
	(*Response)(nil),                           // 15: gproto.Response
	(*Dice)(nil),                               // 16: gproto.Dice
	(*MovementResponse)(nil),                   // 17: gproto.MovementResponse
	(*MovementRequest)(nil),                    // 18: gproto.MovementRequest
}
var file_server_game_proto_depIdxs = []int32{
	7,  // 0: gproto.NewGameRequest.player:type_name -> gproto.Player
	7,  // 1: gproto.JoinRequest.player:type_name -> gproto.Player
	7,  // 2: gproto.PlayerUpdate.player:type_name -> gproto.Player
	7,  // 3: gproto.GameOver.winner:type_name -> gproto.Player
	16, // 4: gproto.RollDice.dice:type_name -> gproto.Dice
	1,  // 5: gproto.RollDice.side:type_name -> gproto.DiceSide
	2,  // 6: gproto.NotificationResponse.type:type_name -> gproto.NotificationResponse.NotificationType
	9,  // 7: gproto.NotificationResponse.PlayerJoin:type_name -> gproto.PlayerUpdate
	9,  // 8: gproto.NotificationResponse.PlayerLeft:type_name -> gproto.PlayerUpdate
	9,  // 9: gproto.NotificationResponse.PlayerTurn:type_name -> gproto.PlayerUpdate
	10, // 10: gproto.NotificationResponse.GameOver:type_name -> gproto.GameOver
	16, // 11: gproto.NotificationResponse.DicePick:type_name -> gproto.Dice
	11, // 12: gproto.NotificationResponse.TurnOver:type_name -> gproto.TurnOver
	12, // 13: gproto.NotificationResponse.RollDice:type_name -> gproto.RollDice
	6,  // 14: gproto.Response.NewGameResponse:type_name -> gproto.NewGameResponse
	9,  // 15: gproto.Response.JoinResponse:type_name -> gproto.PlayerUpdate
	13, // 16: gproto.Response.Notification:type_name -> gproto.NotificationResponse
	17, // 17: gproto.Response.Movement:type_name -> gproto.MovementResponse
	3,  // 18: gproto.Dice.Level:type_name -> gproto.Dice.DiceLevel
	1,  // 19: gproto.Dice.Sides:type_name -> gproto.DiceSide
	0,  // 20: gproto.MovementResponse.type:type_name -> gproto.MovementType
	16, // 21: gproto.MovementResponse.dice:type_name -> gproto.Dice
	12, // 22: gproto.MovementResponse.rollDice:type_name -> gproto.RollDice
	0,  // 23: gproto.MovementRequest.type:type_name -> gproto.MovementType
	16, // 24: gproto.MovementRequest.dice:type_name -> gproto.Dice
	5,  // 25: gproto.Game.NewGame:input_type -> gproto.NewGameRequest
	8,  // 26: gproto.Game.Join:input_type -> gproto.JoinRequest
	14, // 27: gproto.Game.Notifications:input_type -> gproto.RegisterNotifications
	18, // 28: gproto.Game.Movement:input_type -> gproto.MovementRequest
	15, // 29: gproto.Game.NewGame:output_type -> gproto.Response
	15, // 30: gproto.Game.Join:output_type -> gproto.Response
	15, // 31: gproto.Game.Notifications:output_type -> gproto.Response
	15, // 32: gproto.Game.Movement:output_type -> gproto.Response
	29, // [29:33] is the sub-list for method output_type
	25, // [25:29] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_server_game_proto_init() }
func file_server_game_proto_init() {
	if File_server_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TurnOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollDice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNotifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_game_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_server_game_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*NotificationResponse_PlayerJoin)(nil),
		(*NotificationResponse_PlayerLeft)(nil),
		(*NotificationResponse_PlayerTurn)(nil),
		(*NotificationResponse_GameOver)(nil),
		(*NotificationResponse_DicePick)(nil),
		(*NotificationResponse_TurnOver)(nil),
		(*NotificationResponse_RollDice)(nil),
	}
	file_server_game_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*Response_NewGameResponse)(nil),
		(*Response_JoinResponse)(nil),
		(*Response_Notification)(nil),
		(*Response_Movement)(nil),
	}
	file_server_game_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*MovementResponse_Dice)(nil),
		(*MovementResponse_RollDice)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_game_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_game_proto_goTypes,
		DependencyIndexes: file_server_game_proto_depIdxs,
		EnumInfos:         file_server_game_proto_enumTypes,
		MessageInfos:      file_server_game_proto_msgTypes,
	}.Build()
	File_server_game_proto = out.File
	file_server_game_proto_rawDesc = nil
	file_server_game_proto_goTypes = nil
	file_server_game_proto_depIdxs = nil
}
